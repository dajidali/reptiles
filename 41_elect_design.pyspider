#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# Created on 2017-10-10 09:30:40
# Project: 41_elect_design

from pyspider.libs.base_handler import *
import pyspider.libs.xxtools as tools
from pyspider.database.mysql.mysqldb import MySql
import time

class Handler(BaseHandler):
    crawl_config = {
    }

    @every(minutes=24 * 60)
    def on_start(self):
            
        urls=[
            ['http://www.ceppea.net/n/148?pid=148','0410101'],#行业信息
            ['http://www.ceppea.net/n/14?pid=14','0410102'],#文章精选
            ['http://www.ceppea.net/n/147?pid=147','0410103'],#政策规定
            ['http://www.ceppea.net/n/142?pid=133','0410201'],#统计对标
            ['http://www.ceppea.net/n/145?pid=133','0410202'],#统计动态
            ['http://www.ceppea.net/n/253','0410203'],#行业自律
            ['http://www.ceppea.net/n/180?pid=1','0410204'],#信用评价
            ['http://www.ceppea.net/n/146','0410301'],#协会工作
            ['http://www.ceppea.net/n/149','0410302'],#会员动态
            ['http://www.ceppea.net/n/150','0410303'],#通知公告
        ]        
        for each in urls:
            self.crawl(each[0], callback=self.index_page, save=each[1])        
        #self.crawl('http://www.ceppea.net/n/148?pid=148', callback=self.index_page, save='0410101')

    @config(age=10 * 24 * 60 * 60)
    def index_page(self, response):
        for each in response.doc('span div > a').items():
            self.crawl(each.attr.href, callback=self.index_page, save = response.save)
        for each in response.doc('dd li > a').items():
            self.crawl(each.attr.href, callback=self.detail_page, save = response.save)

    @config(priority=2)
    def detail_page(self, response):
        title_string = response.doc('h1').text()
        title = title_string[:title_string.find('发布时间')-1]
        content = response.doc('.text').html()
        url = response.url
        site = 'http://www.ceppea.net/'
        content_dom = tools.ext_cont(url, content)
        pagekey = tools.get_md5(title+url)
        date_string = response.doc('h1 > span').text()

        date = time.strptime(date_string[5:15],'%Y-%m-%d')
        date = time.strftime('%Y%m%d',date)        
        kind = response.save
        return {
            "pagekey": pagekey,
            "url": url,
            "site": site,
            "title": title,
            "content_dom":content_dom,
            "cdate": date,
            "kind":kind
        }
    
    def on_result(self, result):
        print(result)
        if not result or not result['title']:
            return
        sql = MySql()
        sql.into('BUSI_CREDIT_INFO',**result)          
  
