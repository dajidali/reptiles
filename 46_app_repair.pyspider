#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# Created on 2017-10-11 09:24:17
# Project: 46_app_repair


from pyspider.libs.base_handler import *
import pyspider.libs.xxtools as tools
from pyspider.database.mysql.mysqldb import MySql
import time

class Handler(BaseHandler):
    crawl_config = {
    }

    @every(minutes=24 * 60)
    def on_start(self):
        urls=[
            ['http://www.cheasa.org/cn/fgbz/zcfg.html','0460101'],#政策法规
            ['http://www.cheasa.org/cn/xhgg/xhgg.html','0460201'],#协会公告
            ['http://www.cheasa.org/cn/fgbz/zcfg.html','0460301'],#领袖发言
            ['http://www.cheasa.org/cn/fgbz/zcfg.html','0460302'],#行业动态
            ['http://www.cheasa.org/cn/fgbz/zcfg.html','0460303'],#特别关注
            ['http://www.cheasa.org/cn/fgbz/zcfg.html','0460304'],#协会新闻
            ['http://www.cheasa.org/cn/fgbz/zcfg.html','0460305'],#会员动态
        ]        
        for each in urls:
            self.crawl(each[0], callback=self.index_page, save=each[1])    
        #self.crawl('http://www.cheasa.org/cn/xhgg/xhgg.html', callback=self.index_page, save='0460101')

    @config(age=10 * 24 * 60 * 60)
    def index_page(self, response):
        for each in response.doc('td td td td > a').items():
            if(each.attr.href.find('/cn/p/')>=0):
                self.crawl(each.attr.href, callback=self.index_page, save = response.save)
        for each in response.doc('td > span > a').items():
            self.crawl(each.attr.href, callback=self.detail_page, save = response.save)

    @config(priority=2)
    def detail_page(self, response):
        title = response.doc('#content_title').text()
        content = response.doc('#content_detail').html()
        url = response.url
        site = 'http://www.cheasa.org/'
        content_dom = tools.ext_cont(url, content)
        pagekey = tools.get_md5(title+url)
        date_string = response.doc('#content_flaginfo').text()

        date = time.strptime(date_string[:10],'%Y-%m-%d')
        date = time.strftime('%Y%m%d',date)        
        kind = response.save
        return {
            "pagekey": pagekey,
            "url": url,
            "site": site,
            "title": title,
            "content_dom":content_dom,
            "cdate": date,
            "kind":kind
        }
    

    def on_result(self, result):
        print(result)
        if not result or not result['title']:
            return
        sql = MySql()
        sql.into('BUSI_CREDIT_INFO',**result)     
