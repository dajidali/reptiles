#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# Created on 2017-08-03 17:58:11
# Project: 13_1

from pyspider.libs.base_handler import *
from pyspider.database.mysql.mysqldb import MySql
import pyspider.libs.xxtools as tools
import urllib
from urllib import parse

class Handler(BaseHandler):
    def on_start(self):

        #1协会交流
        self.crawl('http://www.cappma.org/xiehuijiaoliu_article_list.php?big_class_id=5&small_class_id=89&small_parent_id=0', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130101'} ,connect_timeout = 50, timeout = 200)
        #2综合资讯
        self.crawl('http://www.cappma.org/hangyexinxi_article_list.php?big_class_id=7&small_class_id=82&small_parent_id=81', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130201'} ,connect_timeout = 50, timeout = 200)#时政要闻
        self.crawl('http://www.cappma.org/hangyexinxi_article_list.php?big_class_id=7&small_class_id=83&small_parent_id=81', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130202'},connect_timeout = 50, timeout = 200 )#各地浏览
        self.crawl('http://www.cappma.org/hangyexinxi_article_list.php?big_class_id=7&small_class_id=84&small_parent_id=81', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130203'},connect_timeout = 50, timeout = 200 )#其他信息
        #3质量安全	
        self.crawl('http://www.cappma.org/hangyexinxi_article_list.php?big_class_id=7&small_class_id=14&small_parent_id=4', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130301'},connect_timeout = 50, timeout = 200 )#最新动态
	     
        self.crawl('http://www.cappma.org/hangyexinxi_article_list.php?big_class_id=7&small_class_id=15&small_parent_id=4', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130302'},connect_timeout = 50, timeout = 200 )#质量认证
            
	      
        self.crawl('http://www.cappma.org/hangyexinxi_article_list.php?big_class_id=7&small_class_id=16&small_parent_id=4', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130303'},connect_timeout = 50, timeout = 200 ) #质量识别
        #4统计报告	
        self.crawl('http://www.cappma.org/hangyexinxi_article_list.php?big_class_id=7&small_class_id=17&small_parent_id=5', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130401'},connect_timeout = 50, timeout = 200 )#生产形势
	     
        self.crawl('http://www.cappma.org/hangyexinxi_article_list.php?big_class_id=7&small_class_id=18&small_parent_id=5', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130402'},connect_timeout = 50, timeout = 200 )#行业统计
        #5会员之窗
        
        self.crawl('http://www.cappma.org/huiyuanzhichuang_article_list.php?small_class_id=128', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130501'},connect_timeout = 50, timeout = 200 )#会员动态

        #6可持续认证	
        self.crawl('http://www.cappma.org/Sustainable_article_list.php?big_class_id=15&small_class_id=155', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130601'} )#绿色供应链
	      
        self.crawl('http://www.cappma.org/Sustainable_article_list.php?big_class_id=15&small_class_id=156', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130602'} )#ASC认证
	   
        self.crawl('http://www.cappma.org/Sustainable_article_list.php?big_class_id=15&small_class_id=157', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130603'} )#MSC认证
	    
        self.crawl('http://www.cappma.org/Sustainable_article_list.php?big_class_id=15&small_class_id=158', fetch_type='js', callback=self.phantomjs_parser ,params={'crkind': '130604'} )#新闻资讯




     

    @config(age=0)
    def phantomjs_parser(self, response):
        qs1 = parse.parse_qs(list(parse.urlparse(response.url))[4])#从上个页面获取参数crkind
         #翻页
        for each in response.doc('.act_link').items():
            url=each.attr.href
            print(url)
            #将参数crkind赋值给此页面
            bits = list(parse.urlparse(url))
            qs = parse.parse_qs(bits[4])
            qs['crkind']=qs1['crkind']
            bits[4] = parse.urlencode(qs, True)
            url = parse.urlunparse(bits)
            self.crawl(url, fetch_type='js', callback=self.phantomjs_parser,connect_timeout = 50, timeout = 200) 
         #调用detail_page函数
        for each in response.doc('.lm_newslist').items():
            url=each.attr.href
            #将参数crkind赋值给此页面
            bits = list(parse.urlparse(url))
            qs = parse.parse_qs(bits[4])
            qs['crkind']=qs1['crkind']
            bits[4] = parse.urlencode(qs, True)
            url = parse.urlunparse(bits)
            self.crawl(url, fetch_type='js', callback=self.detail_page,connect_timeout = 60, timeout = 300) 
        
   
    @config(priority=2)
    def detail_page(self, response):
        site = "'http://www.cappma.org/index.php"
        url = response.url
        title = response.doc('.txtbt > div').text()
        qs = parse.parse_qs(list(parse.urlparse(url))[4])     #从url参数字典分割出crkind的值,注意删掉'['和'''
        kind=str(qs['crkind']).strip("]").strip("[").strip("\'")   
        pagekey = tools.get_md5(title+url)
        content = response.doc('body > table:nth-child(14) > tbody > tr:nth-child(2) > td:nth-child(1) > table:nth-child(1) > tbody > tr:nth-child(5) > td').html()
        content_dom = tools.ext_cont(url, content)
        #获取cdate
        i=0
        cdate=''
        info=response.doc('.txt2').text()
        date=info.split('发布时间：')[1]
        for i in range(0,9) :
            if ( date[i] == '-'):
                continue
            cdate=cdate+date[i]
            i+=1
        
        return {
               "pagekey": pagekey,
               "site": site,
               "url": url,
               "title":title,
               "kind": kind,
               "content":content,
               "content_dom":content_dom,
               "cdate":cdate
              }    

    
    def on_result(self, result):
        print(result)
        if not result or not result['title']:
            return
        sql = MySql()
        sql.into('BUSI_CREDIT_INFO',**result)





