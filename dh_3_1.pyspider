#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# Created on 2017-08-03 18:04:14
# Project: ctma

from pyspider.libs.base_handler import *
from pyspider.database.mysql.mysqldb import MySql
import pyspider.libs.xxtools as tools
import urllib
from urllib import parse

class Handler(BaseHandler):
    def on_start(self):

         #资讯频道
        self.crawl('http://www.ctma.com.cn/ctma_news/zhengce/',callback=self.phantomjs_parser ,params={'crkind': '030101'} ) #政策解读
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=23',callback=self.phantomjs_parser , fetch_type='js',params={'crkind': '030102'} )#国内茶情
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=138',callback=self.phantomjs_parser , fetch_type='js',params={'crkind': '030103'} )#国际茶情
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=25',callback=self.phantomjs_parser , fetch_type='js',params={'crkind': '030104'} )#市场动态
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=27',callback=self.phantomjs_parser , fetch_type='js' ,params={'crkind': '030105'} )#企业快讯
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=114',callback=self.phantomjs_parser , fetch_type='js' ,params={'crkind': '030106'} )#产品推介
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=31',callback=self.phantomjs_parser , fetch_type='js' ,params={'crkind': '030107'} )#展会信息
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=140',callback=self.phantomjs_parser , fetch_type='js' ,params={'crkind': '030108'} )#专家观点
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=26',callback=self.phantomjs_parser , fetch_type='js' ,params={'crkind': '030109'} )#茶业科技
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=29',callback=self.phantomjs_parser , fetch_type='js' ,params={'crkind': '030110'} )#人物风采
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=30',callback=self.phantomjs_parser , fetch_type='js' ,params={'crkind': '030111'} )#茶与文化
        self.crawl('http://www.ctma.com.cn/plus/list.php?tid=122',callback=self.phantomjs_parser , fetch_type='js' ,params={'crkind': '030112'} )#茶与健康
        
    @config(age=0)
    def phantomjs_parser(self, response):
        qs1 = parse.parse_qs(list(parse.urlparse(response.url))[4])#从上个页面获取参数crkind
        #翻页
        for each in response.doc('.pagination a').items():
            if (each not in response.doc('.thisclass a').items()):
                url=each.attr.href
                #将参数crkind赋值给此页面
                bits = list(parse.urlparse(url))
                qs = parse.parse_qs(bits[4])
                qs['crkind']=qs1['crkind']
                bits[4] = parse.urlencode(qs, True)
                url = parse.urlunparse(bits)
                self.crawl(url, fetch_type='js', callback=self.phantomjs_parser) 
         #调用detail_page函数
        for each in response.doc('.listBox li > a').items():
            url=each.attr.href
            #将参数crkind赋值给此页面
            bits = list(parse.urlparse(url))
            qs = parse.parse_qs(bits[4])
            qs['crkind']=qs1['crkind']
            bits[4] = parse.urlencode(qs, True)
            url = parse.urlunparse(bits)
            self.crawl(url, fetch_type='js', callback=self.detail_page)  
        
   
    @config(priority=2)
    def detail_page(self, response):
        site = "'http://www.ctma.com.cn/"
        url = response.url
        title = response.doc('.listBox h1').text()
        qs = parse.parse_qs(list(parse.urlparse(url))[4])     #从url参数字典分割出crkind的值,注意删掉'['和'''
        kind=str(qs['crkind']).strip("]").strip("[").strip("\'")   
        pagekey = tools.get_md5(title+url)
        content = response.doc('.listBox > div').html()
        content_dom = tools.ext_cont(url, content)
        #获取cdate
        i=0
        cdate=''
        date=response.doc('.info').text()
        for i in range(4,14) :
            if ( date[i] == '-'):
                 continue
            cdate=cdate+date[i]
            i+=1
        
        return {
               "pagekey": pagekey,
               "site": site,
               "url": url,
               "title":title,
               "kind": kind,
               "content":content,
               "content_dom":content_dom,
               "cdate":cdate
              }    

    
    def on_result(self, result):
        print(result)
        if not result or not result['title']:
            return
        sql = MySql()
        sql.into('BUSI_CREDIT_INFO',**result)





