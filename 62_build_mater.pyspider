#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# Created on 2017-10-16 13:34:10
# Project: 62_build_mater


from pyspider.libs.base_handler import *
import pyspider.libs.xxtools as tools
from pyspider.database.mysql.mysqldb import MySql
import time

class Handler(BaseHandler):
    crawl_config = {
    }

    @every(minutes=24 * 60)
    def on_start(self):
        urls=[
            ['http://www.cbmf.org/cbmf/lhhdt/wjtz/index.html','0620101'],#文件通知
            ['http://www.cbmf.org/cbmf/lhhdt/gsgg1/index.html','0620102'],#公示公告
            ['http://www.cbmf.org/cbmf/lhhdt/ldhd/index.html','0620103'],#领导活动
            ['http://www.cbmf.org/cbmf/lhhdt/gzdt39/index.html','0620104'],#工作动态
            ['http://www.cbmf.org/cbmf/xydt/zfxx/index.html','0620201'],#政府信息
            ['http://www.cbmf.org/cbmf/xydt/zfxx/index.html','0620202'],#行业信息
            ['http://www.cbmf.org/cbmf/kjcx/kjcg/index.html','0620301'],#科技成果
            ['http://www.cbmf.org/cbmf/kjcx/jsgx/index.html','0620302'],#技术革新
            ['http://www.cbmf.org/cbmf/zcbz/zcfg55/index.html','0620401'],#政策法规
            ['http://www.cbmf.org/cbmf/zcbz/bzgf/index.html','0620402'],#标准规范
            ['http://www.cbmf.org/cbmf/ztbd/lshb/index.html','0620501'],#绿色发展
            ['http://www.cbmf.org/cbmf/ztbd/lged/index.html','0620502'],#两个二代
            ['http://www.cbmf.org/cbmf/ztbd/jgdz/index.html','0620503'],#结构调整
            ['http://www.cbmf.org/cbmf/ztbd/jnjp/index.html','0620504'],#节能减排
            ['http://www.cbmf.org/cbmf/xylj/qyjd/index.html','0620601'],#企业新闻
            ['http://www.cbmf.org/cbmf/xylj/fzdt57/index.html','0620602'],#发展动态
            ['http://www.cbmf.org/cbmf/xylj/qywh/index.html','0620603'],#企业文化
            ['http://www.cbmf.org/cbmf/xgxy/mt72/index.html','0620701'],#煤炭
            ['http://www.cbmf.org/cbmf/xgxy/dl14/index.html','0620702'],#电力
            ['http://www.cbmf.org/cbmf/xgxy/sh52/index.html','0620703'],#石化
            ['http://www.cbmf.org/cbmf/xgxy/ys90/index.html','0620704'],#运输
            ['http://www.cbmf.org/cbmf/xgxy/gt79/index.html','0620705'],#钢铁
        ]        
        for each in urls:
            self.crawl(each[0], callback=self.index_page, save=each[1])    

        #self.crawl('http://www.cbmf.org/cbmf/xydt/zfxx/index.html', callback=self.index_page, save='0490101')

    @config(age=10 * 24 * 60 * 60)
    def index_page(self, response):
        print(response.doc('.pagingNormal').html())
        for each in response.doc('.pagingNormal').items():
            if(each.text()!='尾页'):
                self.crawl('http://www.cbmf.org' + each.attr.tagname, callback=self.index_page, save = response.save)
        for each in response.doc('.fr > .column')('li>a').items():
            if(each.attr.href.find('.html')>=0):
                self.crawl(each.attr.href, callback=self.detail_page, save = response.save)

    @config(priority=2)
    def detail_page(self, response):
        title = response.doc('#xilanzt > table > tbody > tr:nth-child(1) > td > h1').text()
        content = response.doc('#xilanzt').html()
        url = response.url
        site = 'http://www.cbmf.org/'
        content_dom = tools.ext_cont(url, content)
        pagekey = tools.get_md5(title+url)
        date_string = response.doc('#xilanzt > table > tbody > tr:nth-child(3) > td').text()

        date = time.strptime(date_string[date_string.find('发布时间：')+5:date_string.find('发布时间：')+16],'%Y年%m月%d日')
        date = time.strftime('%Y%m%d',date)        
        kind = response.save
        return {
            "pagekey": pagekey,
            "url": url,
            "site": site,
            "title": title,
            "content_dom":content_dom,
            "cdate": date,
            "kind":kind
        }
    

    def on_result(self, result):
        print(result)
        if not result or not result['title']:
            return
        sql = MySql()
        sql.into('BUSI_CREDIT_INFO',**result)   
